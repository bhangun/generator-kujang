<%_
  
  const entityClass = _.capitalize(method.operationId)
  const entityInstance = method.operationId
  const dartFields = method.properties

_%>
import 'package:flutter/material.dart';

import '../../bloc/path<%= index %>/<%= entityInstance %>_bloc.dart';
import 'package:<%= appsName %>/widgets/global_methods.dart';
import 'package:<%= appsName %>/widgets/progress_indicator_widget.dart';

/**
* <%= method.summary %>
* path: <%= path.pathOrigin %>
*/
class <%= entityClass %>Form extends StatefulWidget {
  final <%= entityClass %>Bloc? data;
  const <%= entityClass %>Form({super.key, this.data});
  @override
  _<%= entityClass %>FormState createState() => _<%= entityClass %>FormState();
}

class _<%= entityClass %>FormState extends State<<%= entityClass %>Form> {<% 
for (idx in dartFields) { %><% if(idx=='id' || dartFields[idx]['desc'] == 'relationship') {%>
  <%} else if (dartFields[idx]['type'] == 'enum') {%>
  var _<%= dartFields[idx]['name'] %> = ''; <%} else {%>
  final _<%= dartFields[idx]['name'] %> = <%= dartFields[idx]['cont'] %>;<%}%><%}%>

  late <%= entityClass %>Bloc _<%= entityInstance %>Bloc = <%= entityClass %>Bloc();<% for (idx in dartFields) { %><% if (dartFields[idx]['desc'] == 'relationship') {%>
  late <%= _.capitalize(idx) %>Bloc _<%= idx %>Bloc = <%= entityClass %>Bloc(); <%}}%>

  @override
  void dispose() {<% for (idx in dartFields) { %><% if (dartFields[idx]['type'] != 'enum' && idx!='id' && dartFields[idx]['desc'] != 'relationship') {%>
    _<%= dartFields[idx]['name'] %>.dispose();<%}%><%}%>
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    <% for (idx in dartFields) { if (idx != 'id' && dartFields[idx]['type'] != 'enum' && dartFields[idx]['desc'] != 'relationship')  {%>
    _<%= dartFields[idx]['name'] %>.addListener(() {
      _<%= entityInstance %>Bloc.set<%= _.capitalize(dartFields[idx]['name'])%>(_<%= dartFields[idx]['name'] %>.text);
    });  <%}}%>
    return  Scaffold(
            appBar: AppBar(
              title: Text(_<%= entityInstance %>Bloc.formTitle),
            ),
            body: _buildBody(),
            floatingActionButton: FloatingActionButton(
              onPressed: () => _<%= entityInstance %>Bloc.save(),
              tooltip: 'Add',
              child: const Icon(Icons.save),
            ));
  }

  _buildBody() {
    return Stack(
      children: <Widget>[
        _<%= entityInstance %>Bloc.loading
            ? const CustomProgressIndicatorWidget()
            : Material(child: _buildForm()),
        _<%= entityInstance %>Bloc.success
            ? Container()
            : showErrorMessage(context, '') 
      ],
    );
  }

  _buildForm() {
    return SafeArea(
        child: ListView(
            padding: const EdgeInsets.symmetric(horizontal: 24.0),
            children: _buildListChild()));
  }

  _buildListChild() {
    return <Widget>[
      const SizedBox(height: 120.0),<% for (idx in dartFields) { if (idx != 'id' && dartFields[idx]['type'] != 'enum')  {%>
      TextField(
        controller: _<%= dartFields[idx]['name'] %>,
        decoration: InputDecoration(
          filled: true,
          labelText: '<%= _.capitalize(dartFields[idx]['name']) %>',
        ),
      ),
      <%}}%>
    ];
  }
}
