import 'dart:async';
import 'dart:convert';

import 'package:<%= appsName %>/services/network/rest_services.dart'; <% for (i in entities) { %>
import 'package:<%= appsName %>/models/<%= entities[i].entityInstance %>.dart'; <% } %>

<% if(!entities) for (i in methods) { %>
import 'package:<%= appsName %>/models/<%= services[i].responseType %>.dart'; <% } %>

/// <%= info.title %>
/// @version <%= info.version %>
class <%= _.capitalize(appsName) %>Services { 
<% for (i in methods) { %>
  /// <%= services[i].summary %>
  /// Path: <%= services[i].path %>, 
  /**
  <% if(services[i].desc){ %><%= services[i].desc %> <% } %>
  */
  static Future<% if(services[i].responseType && services[i].responseType != 'UnknownObject' && services[i].responseType != 'void'){%><<%= services[i].responseType %>><%}%> <%= services[i].serviceName %>(<%= services[i].parametersString %>) async { 
    var response = await RestServices.<%= services[i].methodPath %>('<%= services[i].path %><%- services[i].query %>'<%- services[i].jsonParam %>); 
    <% if(services[i].responseType && services[i].responseType != 'UnknownObject' && services[i].responseType != 'void'){ %>return <%= services[i].responseType %>.fromJson(json.decode(response)); <% } %>
  }
<% } %>
}
