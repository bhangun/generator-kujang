<%_

  const entityClass = _.capitalize(method.operationId)
  const entityInstance = method.operationId
  const dartFields = method.properties

  const index = {};
  let hasUserRelationship = false;
  const id = {};
  var i=0;


_%>
import 'package:mobx/mobx.dart';
import 'package:<%= appsName %>/services/navigation.dart';
import 'package:<%= appsName %>/services/apps_routes.dart';
import 'package:<%= appsName %>/services/apps_services.dart';
<% for (idx in dartFields) { %><% if (dartFields[idx]['desc'] == 'relationship') {%>
import '../../<%= idx %>/models/<%= idx %>.dart'; <%}}%>

part '<%= entityInstance %>_store.g.dart';

class <%= entityClass %>Store = _<%= entityClass %>Store with _$<%= entityClass %>Store;

abstract class _<%= entityClass %>Store with Store {

  @observable
  String errorMessage='error';

  @observable
  bool showError = false;

  List<<%= entityClass %>>? <%= entityInstance %>List;
  <% for (idx in dartFields) { if (dartFields[idx]['type'] == 'enum') {%>
  String? <%- dartFields[idx]['name'] %>;<%} else if (dartFields[idx]['desc'] == 'relationship') { %><% if(dartFields[idx]['isList']) {%>
  List<<%- dartFields[idx]['type'] %>>? <%- dartFields[idx]['name'] %>;<% } else {%>
  <%= dartFields[idx]['type'] %>? <%= dartFields[idx]['name'] %>; <% } } else if(idx!='id'){%>
  <%- dartFields[idx]['type'] %>? <%- dartFields[idx]['name'] %>;<% }} %>
    
  // actions:-------------------------------------------------------------------
  String get formTitle => isUpdated? title='Update <%= entityClass %>':'Create <%= entityClass %>'; <% for (idx in dartFields) {  if(idx!='id') {%>
  
  void set<%= _.capitalize(dartFields[idx]['name'])%>(<% if(dartFields[idx]['type'] != 'enum' && dartFields[idx]['isList'])  {%>List<<%= dartFields[idx]['type'] %>><%} else{%><%= dartFields[idx]['type'] %><%}%> value) {
    <%- dartFields[idx]['name'] %> = value;
  }<%} } %>

  @action
  <%= methods[i].methodName %>(<%= methods[i].parameters %>) {
    try {
      <%= methods[i].methodName %>(<%= methods[i].onlyParam %>)
    } catch (e) {
      
    }
  }

}
